<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>中文博客 on My Lives</title>
    <link>/blog/cn/</link>
    <description>Recent content in 中文博客 on My Lives</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Sep 2017 16:27:18 +0000</lastBuildDate>
    <atom:link href="/blog/cn/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>生存曲线美化</title>
      <link>/blog/cn/2017/09/%E7%94%9F%E5%AD%98%E6%9B%B2%E7%BA%BF%E7%BE%8E%E5%8C%96/</link>
      <pubDate>Thu, 07 Sep 2017 16:27:18 +0000</pubDate>
      
      <guid>/blog/cn/2017/09/%E7%94%9F%E5%AD%98%E6%9B%B2%E7%BA%BF%E7%BE%8E%E5%8C%96/</guid>
      <description>
        &lt;p&gt;好久以前在微信里看到这个文章。今天整理用rmarkdonw整理在这里，以后更新的我的包里。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzIyMDUwOTQwNA==&amp;amp;mid=2247483665&amp;amp;idx=1&amp;amp;sn=05469909bf70e234fb71a3653e51ba8b&amp;amp;scene=23&amp;amp;srcid=072848z8s1DucjVqpZDqAYTu#rd&#34;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(survival)
library(ggplot2)
library(survminer)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 载入需要的程辑包：ggpubr&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 载入需要的程辑包：magrittr&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 载入数据
#使用Surv（）函数建立基本生存对象
fit&amp;lt;- survfit(Surv(time, status) ~ sex, data = lung)
summary(fit) #查看结果&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Call: survfit(formula = Surv(time, status) ~ sex, data = lung)
## 
##                 sex=1 
##  time n.risk n.event survival std.err lower 95% CI upper 95% CI
##    11    138       3   0.9783  0.0124       0.9542        1.000
##    12    135       1   0.9710  0.0143       0.9434        0.999
##    13    134       2   0.9565  0.0174       0.9231        0.991
##    15    132       1   0.9493  0.0187       0.9134        0.987
##    26    131       1   0.9420  0.0199       0.9038        0.982
##    30    130       1   0.9348  0.0210       0.8945        0.977
##    31    129       1   0.9275  0.0221       0.8853        0.972
##    53    128       2   0.9130  0.0240       0.8672        0.961
##    54    126       1   0.9058  0.0249       0.8583        0.956
##    59    125       1   0.8986  0.0257       0.8496        0.950
##    60    124       1   0.8913  0.0265       0.8409        0.945
##    65    123       2   0.8768  0.0280       0.8237        0.933
##    71    121       1   0.8696  0.0287       0.8152        0.928
##    81    120       1   0.8623  0.0293       0.8067        0.922
##    88    119       2   0.8478  0.0306       0.7900        0.910
##    92    117       1   0.8406  0.0312       0.7817        0.904
##    93    116       1   0.8333  0.0317       0.7734        0.898
##    95    115       1   0.8261  0.0323       0.7652        0.892
##   105    114       1   0.8188  0.0328       0.7570        0.886
##   107    113       1   0.8116  0.0333       0.7489        0.880
##   110    112       1   0.8043  0.0338       0.7408        0.873
##   116    111       1   0.7971  0.0342       0.7328        0.867
##   118    110       1   0.7899  0.0347       0.7247        0.861
##   131    109       1   0.7826  0.0351       0.7167        0.855
##   132    108       2   0.7681  0.0359       0.7008        0.842
##   135    106       1   0.7609  0.0363       0.6929        0.835
##   142    105       1   0.7536  0.0367       0.6851        0.829
##   144    104       1   0.7464  0.0370       0.6772        0.823
##   147    103       1   0.7391  0.0374       0.6694        0.816
##   156    102       2   0.7246  0.0380       0.6538        0.803
##   163    100       3   0.7029  0.0389       0.6306        0.783
##   166     97       1   0.6957  0.0392       0.6230        0.777
##   170     96       1   0.6884  0.0394       0.6153        0.770
##   175     94       1   0.6811  0.0397       0.6076        0.763
##   176     93       1   0.6738  0.0399       0.5999        0.757
##   177     92       1   0.6664  0.0402       0.5922        0.750
##   179     91       2   0.6518  0.0406       0.5769        0.736
##   180     89       1   0.6445  0.0408       0.5693        0.730
##   181     88       2   0.6298  0.0412       0.5541        0.716
##   183     86       1   0.6225  0.0413       0.5466        0.709
##   189     83       1   0.6150  0.0415       0.5388        0.702
##   197     80       1   0.6073  0.0417       0.5309        0.695
##   202     78       1   0.5995  0.0419       0.5228        0.687
##   207     77       1   0.5917  0.0420       0.5148        0.680
##   210     76       1   0.5839  0.0422       0.5068        0.673
##   212     75       1   0.5762  0.0424       0.4988        0.665
##   218     74       1   0.5684  0.0425       0.4909        0.658
##   222     72       1   0.5605  0.0426       0.4829        0.651
##   223     70       1   0.5525  0.0428       0.4747        0.643
##   229     67       1   0.5442  0.0429       0.4663        0.635
##   230     66       1   0.5360  0.0431       0.4579        0.627
##   239     64       1   0.5276  0.0432       0.4494        0.619
##   246     63       1   0.5192  0.0433       0.4409        0.611
##   267     61       1   0.5107  0.0434       0.4323        0.603
##   269     60       1   0.5022  0.0435       0.4238        0.595
##   270     59       1   0.4937  0.0436       0.4152        0.587
##   283     57       1   0.4850  0.0437       0.4065        0.579
##   284     56       1   0.4764  0.0438       0.3979        0.570
##   285     54       1   0.4676  0.0438       0.3891        0.562
##   286     53       1   0.4587  0.0439       0.3803        0.553
##   288     52       1   0.4499  0.0439       0.3716        0.545
##   291     51       1   0.4411  0.0439       0.3629        0.536
##   301     48       1   0.4319  0.0440       0.3538        0.527
##   303     46       1   0.4225  0.0440       0.3445        0.518
##   306     44       1   0.4129  0.0440       0.3350        0.509
##   310     43       1   0.4033  0.0441       0.3256        0.500
##   320     42       1   0.3937  0.0440       0.3162        0.490
##   329     41       1   0.3841  0.0440       0.3069        0.481
##   337     40       1   0.3745  0.0439       0.2976        0.471
##   353     39       2   0.3553  0.0437       0.2791        0.452
##   363     37       1   0.3457  0.0436       0.2700        0.443
##   364     36       1   0.3361  0.0434       0.2609        0.433
##   371     35       1   0.3265  0.0432       0.2519        0.423
##   387     34       1   0.3169  0.0430       0.2429        0.413
##   390     33       1   0.3073  0.0428       0.2339        0.404
##   394     32       1   0.2977  0.0425       0.2250        0.394
##   428     29       1   0.2874  0.0423       0.2155        0.383
##   429     28       1   0.2771  0.0420       0.2060        0.373
##   442     27       1   0.2669  0.0417       0.1965        0.362
##   455     25       1   0.2562  0.0413       0.1868        0.351
##   457     24       1   0.2455  0.0410       0.1770        0.341
##   460     22       1   0.2344  0.0406       0.1669        0.329
##   477     21       1   0.2232  0.0402       0.1569        0.318
##   519     20       1   0.2121  0.0397       0.1469        0.306
##   524     19       1   0.2009  0.0391       0.1371        0.294
##   533     18       1   0.1897  0.0385       0.1275        0.282
##   558     17       1   0.1786  0.0378       0.1179        0.270
##   567     16       1   0.1674  0.0371       0.1085        0.258
##   574     15       1   0.1562  0.0362       0.0992        0.246
##   583     14       1   0.1451  0.0353       0.0900        0.234
##   613     13       1   0.1339  0.0343       0.0810        0.221
##   624     12       1   0.1228  0.0332       0.0722        0.209
##   643     11       1   0.1116  0.0320       0.0636        0.196
##   655     10       1   0.1004  0.0307       0.0552        0.183
##   689      9       1   0.0893  0.0293       0.0470        0.170
##   707      8       1   0.0781  0.0276       0.0390        0.156
##   791      7       1   0.0670  0.0259       0.0314        0.143
##   814      5       1   0.0536  0.0239       0.0223        0.128
##   883      3       1   0.0357  0.0216       0.0109        0.117
## 
##                 sex=2 
##  time n.risk n.event survival std.err lower 95% CI upper 95% CI
##     5     90       1   0.9889  0.0110       0.9675        1.000
##    60     89       1   0.9778  0.0155       0.9478        1.000
##    61     88       1   0.9667  0.0189       0.9303        1.000
##    62     87       1   0.9556  0.0217       0.9139        0.999
##    79     86       1   0.9444  0.0241       0.8983        0.993
##    81     85       1   0.9333  0.0263       0.8832        0.986
##    95     83       1   0.9221  0.0283       0.8683        0.979
##   107     81       1   0.9107  0.0301       0.8535        0.972
##   122     80       1   0.8993  0.0318       0.8390        0.964
##   145     79       2   0.8766  0.0349       0.8108        0.948
##   153     77       1   0.8652  0.0362       0.7970        0.939
##   166     76       1   0.8538  0.0375       0.7834        0.931
##   167     75       1   0.8424  0.0387       0.7699        0.922
##   182     71       1   0.8305  0.0399       0.7559        0.913
##   186     70       1   0.8187  0.0411       0.7420        0.903
##   194     68       1   0.8066  0.0422       0.7280        0.894
##   199     67       1   0.7946  0.0432       0.7142        0.884
##   201     66       2   0.7705  0.0452       0.6869        0.864
##   208     62       1   0.7581  0.0461       0.6729        0.854
##   226     59       1   0.7452  0.0471       0.6584        0.843
##   239     57       1   0.7322  0.0480       0.6438        0.833
##   245     54       1   0.7186  0.0490       0.6287        0.821
##   268     51       1   0.7045  0.0501       0.6129        0.810
##   285     47       1   0.6895  0.0512       0.5962        0.798
##   293     45       1   0.6742  0.0523       0.5791        0.785
##   305     43       1   0.6585  0.0534       0.5618        0.772
##   310     42       1   0.6428  0.0544       0.5447        0.759
##   340     39       1   0.6264  0.0554       0.5267        0.745
##   345     38       1   0.6099  0.0563       0.5089        0.731
##   348     37       1   0.5934  0.0572       0.4913        0.717
##   350     36       1   0.5769  0.0579       0.4739        0.702
##   351     35       1   0.5604  0.0586       0.4566        0.688
##   361     33       1   0.5434  0.0592       0.4390        0.673
##   363     32       1   0.5265  0.0597       0.4215        0.658
##   371     30       1   0.5089  0.0603       0.4035        0.642
##   426     26       1   0.4893  0.0610       0.3832        0.625
##   433     25       1   0.4698  0.0617       0.3632        0.608
##   444     24       1   0.4502  0.0621       0.3435        0.590
##   450     23       1   0.4306  0.0624       0.3241        0.572
##   473     22       1   0.4110  0.0626       0.3050        0.554
##   520     19       1   0.3894  0.0629       0.2837        0.534
##   524     18       1   0.3678  0.0630       0.2628        0.515
##   550     15       1   0.3433  0.0634       0.2390        0.493
##   641     11       1   0.3121  0.0649       0.2076        0.469
##   654     10       1   0.2808  0.0655       0.1778        0.443
##   687      9       1   0.2496  0.0652       0.1496        0.417
##   705      8       1   0.2184  0.0641       0.1229        0.388
##   728      7       1   0.1872  0.0621       0.0978        0.359
##   731      6       1   0.1560  0.0590       0.0743        0.328
##   735      5       1   0.1248  0.0549       0.0527        0.295
##   765      3       1   0.0832  0.0499       0.0257        0.270&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#使用survminer程序包ggsurvplot（）函数绘制生存曲线
#简单绘图
ggsurvplot(fit)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/blog/cn/2017-09-07-BeautySurvCurves_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#分生存曲线下面给出number.at risk
ggsurvplot(fit,risk.table=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/blog/cn/2017-09-07-BeautySurvCurves_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#添加log-rank检验p-value
ggsurvplot(fit,risk.table=TRUE,pval=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/blog/cn/2017-09-07-BeautySurvCurves_files/figure-html/unnamed-chunk-1-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#添加置信区间带
ggsurvplot(fit,risk.table=TRUE,conf.int=TRUE,pval=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/blog/cn/2017-09-07-BeautySurvCurves_files/figure-html/unnamed-chunk-1-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>GSEA 参悟</title>
      <link>/blog/cn/2017/09/gsea/</link>
      <pubDate>Thu, 07 Sep 2017 14:56:07 +0000</pubDate>
      
      <guid>/blog/cn/2017/09/gsea/</guid>
      <description>
        

&lt;p&gt;GSEA（Gene Set Enrichment Analysis）方法是目前在pathway analysis方法中，归类为functional score analysis裡的state of the art.&lt;/p&gt;

&lt;p&gt;还是没搞明白，下次再找好资料研究一下。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;gsea结果理解&#34;&gt;GSEA结果理解&lt;/h1&gt;

&lt;p&gt;中间从蓝色到红色的过渡“带”表示基因从上调到下调排列（排序可以按照fold change,也可以是p-value)。黑色像条形码的竖线表示该位置的基因属于某个指定通路。绿色有波动的曲线表示富集分数，从0开始计算，属于基因通路增加，不属于则减少。最后看下黑色的条形码是不是富集在一端。&lt;/p&gt;

&lt;p&gt;作者：hoptop
链接：&lt;a href=&#34;http://www.jianshu.com/p/199b44974480&#34;&gt;http://www.jianshu.com/p/199b44974480&lt;/a&gt;
來源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/blog/blog/img/GSEA.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;首先，可以设定一个衡量差异表达程度的统计量，这里简单起见，用log Fold Change，来把基因排序。上面那个颜色条就表示一共有17425个基因表达，下方数字表示该处对应的基因所在的序号，红色到蓝色，表示从上调到下调。黑色的杠杠，表示在该位置处的基因属于Myc靶基因，那一共就是有188个杠杠。颜色条上方有个数字9109，它表示这这里，基因表达从上调转变成下调。那个位置颜色是白色的，也就是说，倍数差异接近0了。
在GSEA这个检验里面，我们实际上就是在检验上面颜色条里黑色的杠杠，是否有往颜色条一端富集的趋势。
实际在做这个检验时，我们是从红色的序号为1的基因出发到蓝色的序号为17425的基因，这个过程中，遍历每一个基因，每次都查看下当前基因是否是Myc靶基因，如果是，则累加一点分数，否，则扣掉一点分数。这个分数的轨迹，也就是上图中的深绿色曲线。
接下来的问题是，如何得到统计显著性？统计假设检验的本质就是先生成一个零假设的数据分布，然后观察实际数据在这个零假设分布下，是不是在尾端。好了，我们把这句话具现到我们这个GSEA的例子中来。我们有三种方式：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;颜色条不动它，把黑色的杠杠，从颜色条上拿起来，然后再随机的放到颜色条上&lt;/li&gt;
&lt;li&gt;把样本的分组打乱，随机分组，重新计算排序统计量，然后排序&lt;/li&gt;
&lt;li&gt;即做1，又做2&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;第一种方式，对算力要求最低，对样本容量没有要求，但是不考虑基因间的相关性，可能导致一定的假阳性。第二种方式，对算力要求较高，要求一定的样本容量（每组重复数）以保证有效置换次数，可以保持基因间的协方差结构，但power会略低。第三种方式，算力要求最高。
这里假设我们随便选一种方式，重排一次以后，可以按照原先绘制绿色曲线的方法绘制一条新的曲线（零假设的数据），重复这个过程千万次的话，就可以比较精确的得到零假设的覆盖区域了，求取这个阴影的第5到95百分位数的区间，即可绘出结果图中的浅灰色阴影了。
这样统计检验的显著性，就可视化成为观察绿色曲线与灰色阴影的偏离程度了。绿色曲线离x轴最大的偏离值即为该检验的Enrichment Score (ES)，把它对Myc靶基因的数量再校正一下，就可以得到 Normalized Enrichment Score (NES)。这里我们看下结果，非常显著，这个节奏和刚才用Fisher &amp;rsquo;s exact test的结果，明显不一样，这又是为什么呢？
请仔细观察GSEA结果图里，排序统计量和颜色条上黑杠杠的分布。可以发现，绝大部分的Myc靶基因，分布在浅蓝色区域，即绝大部分Myc靶基因都是下调，但是只是微弱的下调，所以它们没有在Fisher exact test中被计入为差异基因。&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>基因本体论(Gene Ontology, GO) 与通路分析(Pathway Analysis)</title>
      <link>/blog/cn/2017/09/ontology/</link>
      <pubDate>Thu, 07 Sep 2017 12:06:46 +0000</pubDate>
      
      <guid>/blog/cn/2017/09/ontology/</guid>
      <description>
        

&lt;h1 id=&#34;基因本体论-针对于单个基因特征&#34;&gt;基因本体论  针对于单个基因特征&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://bioconductor.org/packages/release/bioc/vignettes/clusterProfiler/inst/doc/clusterProfiler.html&#34;&gt;clusterProfiler&lt;/a&gt;包的很多内容还是理解不了，需要找人问问。&lt;/p&gt;

&lt;p&gt;本体论这个词一看就逼格很高的样子，源于哲学，本体论用于描述事物的本质，所以基因本体论就是为了描述基因的本质。GO从三个方面对基因的本质进行描述，
- 1）细胞组分（Cellular Component, CC）：一般用来描述基因作用的位置，比如说高尔基体，内质网这样的；&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;2）分子功能（Molecular Function, MF）：可以描述为分子水平的活性，如催化或结合活性；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;3）生物学过程(BP)：比如说蛋白质磷酸化，细胞粘附都是生物学过程。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;简单地说，GO就像是给基因贴标签进行注释，比如说给X湿兄贴标签，出没地点——小张聊科研(CC)，文风诙谐幽默(MF)，能够让大家轻松愉悦地学到东西(BP)。&lt;/p&gt;

&lt;p&gt;GO的术语是分层的，呈现出树状结构，上文提到的CC、MF和BP即为GO术语的最顶层，比如说下图是BP的分析结果树状图，最顶端即为BP.
&lt;img src=&#34;http://img.mp.itc.cn/upload/20170419/a6c07195ca0f4b738699979d31fbbeb2_th.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;通路分析-针对于群基因-protein-特征&#34;&gt;通路分析  针对于群基因（protein）特征&lt;/h1&gt;

&lt;p&gt;一个生物学过程的实现会涉及到许多蛋白质，这些蛋白质合在一起就是一个通路。通路分析能够帮助我们更好地了解某个或某一些蛋白质在一个生物学过程中所扮演的角色。通路分析和GO都是对基因进行注释，那么为什么要对基因进行注释呢？因为基因说穿了其实是一串RNA，那么它的功能和结构虽然都是客观存在的，但是要如何描述这些客观的东西是基因注释所要解决的问题。
最常用的通路分析数据库是京都基因与基因组百科全书 (Kyoto Encyclopedia of Genes and Genomes, KEGG)。1995年，KEGG数据库项目由京都大学化学研究所教授Minoru Kanehisa领头启动。KEGG数据库是手工绘制的KEGG途径图的集合，每个途径图包含分子相互作用和反应的网络，将基因组中的基因与通路中的基因产物（主要是蛋白质）连接。KEGG pathway analysis即为将目的基因定位到KEGG途径图中的过程。下图为small cell lung cancer的KEGG途径图。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://img.mp.itc.cn/upload/20170419/7f13e82686194a129b65cfc5a0403d7b_th.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Git 参考手册</title>
      <link>/blog/cn/2017/09/git_command/</link>
      <pubDate>Thu, 07 Sep 2017 09:06:46 +0000</pubDate>
      
      <guid>/blog/cn/2017/09/git_command/</guid>
      <description>
        &lt;p&gt;Git &lt;a href=&#34;http://gitref.justjavac.com/&#34;&gt;参考手册中文&lt;/a&gt; &lt;br&gt;
Git &lt;a href=&#34;https://git-scm.com/about&#34;&gt;参考手册ENG&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;git check out -b 创建新分支，并立即切换到它。与以下等效：

&lt;ul&gt;
&lt;li&gt;git branch newbranch&lt;/li&gt;
&lt;li&gt;git checkout newbranch&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;git merge [branch] 将[branch] 分枝合并到当前分支中&lt;/li&gt;
&lt;li&gt;git push [alias] [branch]，就会将你的[branch]分支推送成为[alias]远端上的[branch] 分支&lt;/li&gt;
&lt;/ul&gt;

        
      </description>
    </item>
    
    <item>
      <title>HTML基本语法</title>
      <link>/blog/cn/2017/09/html_basic/</link>
      <pubDate>Tue, 05 Sep 2017 23:03:13 +0000</pubDate>
      
      <guid>/blog/cn/2017/09/html_basic/</guid>
      <description>
        &lt;p&gt;wait for&amp;hellip;&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Ubuntu 安装R</title>
      <link>/blog/cn/2017/09/ubuntu_r/</link>
      <pubDate>Tue, 05 Sep 2017 23:03:13 +0000</pubDate>
      
      <guid>/blog/cn/2017/09/ubuntu_r/</guid>
      <description>
        

&lt;ol&gt;
&lt;li&gt;Ubuntu16.04&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;r&#34;&gt;R&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sudo echo &amp;quot;deb http://cran.rstudio.com/bin/linux/ubuntu xenial/&amp;quot; | sudo tee -a /etc/apt/sources.list 
gpg --keyserver keyserver.ubuntu.com --recv-key 51716619E084DAB9
gpg -a --export 51716619E084DAB9 | sudo apt-key add -
sudo apt-get update
sudo apt-get install r-base r-base-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;rstudio&#34;&gt;Rstudio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34;&gt;Latest file&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sudo apt-get install gdebi-core
sudo gdebi -n rstudio-1.0.44-amd64.deb
rm rstudio-1.0.44-amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;rstudio-server&#34;&gt;Rstudio server&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.rstudio.com/products/rstudio/download-server/&#34;&gt;Latest&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sudo apt-get install gdebi-core
sudo gdebi -n rstudio-1.0.44-amd64.deb
rm rstudio-1.0.44-amd64.deb
完成安装后，RStudio Server会自动启动运行
ps -aux|grep rstudio
8787端口被打开
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;root用户无法登陆，新建一个用户进行登陆 
useradd -d /home/R -m R，创建用户的同时指定主目录 
passwd R，设置密码

系统设置 
主要有两个配置文件，默认文件不存在 
/etc/rstudio/rserver.conf 
/etc/rstudio/rsession.conf

设置端口和ip控制:
vi /etc/rstudio/rserver.conf
www-port=8080#监听端口
www-address=127.0.0.0#允许访问的IP地址，默认0.0.0.0
重启服务器，生效
rstudio-server restart

会话配置管理
vi /etc/rstudio/rsession.conf
session-timeout-minutes=30#会话超时时间
r-cran-repos=http://ftp.ctex.org/mirrors/CRAN#CRAN资源库

rstudio-server start #启动
rstudio-server stop #停止
rstudio-server restart #重启

查看运行中R进程
rstudio-server active-sessions
指定PID，停止运行中的R进程
rstudio-server suspend-session &amp;lt;pid&amp;gt;
停止所有运行中的R进程
rstudio-server  suspend-all
强制停止运行中的R进程，优先级最高，立刻执行
rstudio-server force-suspend-session &amp;lt;pid&amp;gt;
rstudio-server force-suspend-all
RStudio Server临时下线，不允许web访问，并给用户友好提示
rstudio-server offline
RStudio Server临时上线
rstudio-server online
&lt;/code&gt;&lt;/pre&gt;

        
      </description>
    </item>
    
    <item>
      <title>层叠样式表 (Cascading Style Sheets)小结</title>
      <link>/blog/cn/2017/09/css-study/</link>
      <pubDate>Mon, 04 Sep 2017 23:03:13 +0000</pubDate>
      
      <guid>/blog/cn/2017/09/css-study/</guid>
      <description>
        

&lt;p&gt;CSS是一个我一直认为web前段技术，我知道我肯定能学会，但是我却不肯学，可是可是我总是对网页有一种莫名的向往，现在有了R,markdown,shiny,可以回避JSP,PHP等总不愿意学会的工具了，可是HTML,CSS,JS却无法回避了,这是开始shiny之后又不得不继续深入的一个topic. Shiny 的表现太土了.&lt;br /&gt;
  一些概念：样式表定义如何显示 HTML 元素&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;css&#34;&gt;CSS&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.runoob.com/css/css-intro.html&#34;&gt;在线教程&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.runoob.com/cssref/css-reference.html&#34;&gt;参考手册&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;css-语法&#34;&gt;CSS 语法&lt;/h1&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;CSS 规则由两个主要的部分构成：选择器，以及一条或多条声明:&lt;br /&gt;
如：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p{  
text-align:center;  /*这是另一个注释*/  
color:black;  
font-family:arial;  
} 
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;id 选择器: id 选择器以 &amp;ldquo;#&amp;rdquo; 来定义&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#para1
{
text-align:center;
color:red;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;class 选择器：类选择器以一个点&amp;rdquo;.&amp;ldquo;号显示&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;.cen {text-align:center;}  
/*所以拥有cen类的HTML元素都居中*/  
另外，可以指定所有 p 元素使用 class=&amp;quot;center&amp;quot; 让该元素的文本居中  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;  &amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt; 
&amp;lt;title&amp;gt;菜鸟教程(runoob.com)&amp;lt;/title&amp;gt; 
&amp;lt;style&amp;gt;
p.center
{
    text-align:center;
}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1 class=&amp;quot;center&amp;quot;&amp;gt;这个标题不受影响&amp;lt;/h1&amp;gt;
&amp;lt;p class=&amp;quot;center&amp;quot;&amp;gt;这个段落居中对齐。&amp;lt;/p&amp;gt; 
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;样式表种类&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;外部样式表&lt;/li&gt;

&lt;li&gt;&lt;p&gt;内部样式表&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;内联样式&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;  &amp;lt;head&amp;gt;
    &amp;lt;!-- 外部样式 style.css --&amp;gt;
    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;style.css&amp;quot;/&amp;gt;
    &amp;lt;!-- 设置：h3{color:blue;} --&amp;gt;
    &amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
      /* 内部样式 */
      h3{color:green;}
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;h3&amp;gt;测试！&amp;lt;/h3&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;CSS 背景&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;  背景颜色
  body {background-color:#b0c4de;}   #&amp;quot;#ff0000&amp;quot;,&amp;quot;rgb(255,0,0)&amp;quot;,&amp;quot;red&amp;quot;三种表示都可以
  h1 {background-color:#6495ed;}
  p {background-color:#e0ffff;}
  div {background-color:#b0c4de;}
  背景图像
  body {background-image:url(&#39;paper.gif&#39;);}
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;CSS 文本格式&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;##颜色
body {color:red;}
h1 {color:#00ff00;}
h2 {color:rgb(255,0,0);}
##对齐
h1 {text-align:center;}
p.date {text-align:right;}
p.main {text-align:justify;}
##文本修饰
h1 {text-decoration:overline;}
h2 {text-decoration:line-through;}
h3 {text-decoration:underline;}
## 文本转换
p.uppercase {text-transform:uppercase;}
p.lowercase {text-transform:lowercase;}
p.capitalize {text-transform:capitalize;}
##文本缩进
p {text-indent:50px;}
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;CSS 字体&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;##字体样式
&amp;lt;style&amp;gt;
p.normal {font-style:normal;}
p.italic {font-style:italic;}
p.oblique {font-style:oblique;}
&amp;lt;/style&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;p class=&amp;quot;normal&amp;quot;&amp;gt;这是一个段落,正常。&amp;lt;/p&amp;gt;
&amp;lt;p class=&amp;quot;italic&amp;quot;&amp;gt;这是一个段落,斜体。&amp;lt;/p&amp;gt;
&amp;lt;p class=&amp;quot;oblique&amp;quot;&amp;gt;这是一个段落,斜体。&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;

##字体大小
h1 {font-size:40px;}
h2 {font-size:30px;}
p {font-size:14px;}
h1 {font-size:2.5em;} /* 40px/16=2.5em */
h2 {font-size:1.875em;} /* 30px/16=1.875em */
p {font-size:0.875em;} /* 14px/16=0.875em */
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;学到这里也就了解CSS的一个基本语法结构了，不需要深入了&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Shiny and shinyboard学习</title>
      <link>/blog/cn/2017/08/shiny-and-shinyboard/</link>
      <pubDate>Tue, 29 Aug 2017 16:50:01 +0000</pubDate>
      
      <guid>/blog/cn/2017/08/shiny-and-shinyboard/</guid>
      <description>
        

&lt;p&gt;Rblogdonw+Hugo用来实现静态网页，Shiny用于实现动态网页，几乎把R这个工具发挥到了极致，使其无所不能，R可以解决一切&lt;strong&gt;简单&lt;/strong&gt;的需要了。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;1-shiny&#34;&gt;1. Shiny&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://yanping.me/shiny-tutorial/&#34;&gt;中文教程&lt;/a&gt;. Among them, the Articles are very useful.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/tutorial/&#34;&gt;英文教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rstudio/shiny-examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;然而shiny太素颜了，需要一些扩展使得其表现美妙起来。&lt;/p&gt;

&lt;h1 id=&#34;2-shiny-with-html&#34;&gt;2. Shiny with HTML&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;names(shiny::tages)  ## 100多种HTML标签

tags$div(class = &amp;quot;header&amp;quot;, checked = NA,
  tags$p(&amp;quot;Ready to take the Shiny tutorial? If so&amp;quot;),
  tags$a(href = &amp;quot;shiny.rstudio.com/tutorial&amp;quot;, &amp;quot;Click Here!&amp;quot;)
)
## &amp;lt;div class=&amp;quot;header&amp;quot; checked&amp;gt;
##   &amp;lt;p&amp;gt;Ready to take the Shiny tutorial? If so&amp;lt;/p&amp;gt;
##   &amp;lt;a href=&amp;quot;shiny.rstudio.com/tutorial&amp;quot;&amp;gt;Click Here!&amp;lt;/a&amp;gt;
## &amp;lt;/div&amp;gt; 

withTags({
  div(class=&amp;quot;header&amp;quot;, checked=NA,
    p(&amp;quot;Ready to take the Shiny tutorial? If so&amp;quot;),
    a(href=&amp;quot;shiny.rstudio.com/tutorial&amp;quot;, &amp;quot;Click Here!&amp;quot;)
  )
})
## &amp;lt;div class=&amp;quot;header&amp;quot; checked&amp;gt;
##   &amp;lt;p&amp;gt;Ready to take the Shiny tutorial? If so&amp;lt;/p&amp;gt;
##   &amp;lt;a href=&amp;quot;shiny.rstudio.com/tutorial&amp;quot;&amp;gt;Click Here!&amp;lt;/a&amp;gt;
## &amp;lt;/div&amp;gt; 

##lists
tags$div(class=&amp;quot;header&amp;quot;, checked=NA,
  list(
    tags$p(&amp;quot;Ready to take the Shiny tutorial? If so&amp;quot;),
    tags$a(href=&amp;quot;shiny.rstudio.com/tutorial&amp;quot;, &amp;quot;Click Here!&amp;quot;),
    &amp;quot;Thank you&amp;quot;
  )
)
## &amp;lt;div class=&amp;quot;header&amp;quot; checked&amp;gt;
##   &amp;lt;p&amp;gt;Ready to take the Shiny tutorial? If so&amp;lt;/p&amp;gt;
##   &amp;lt;a href=&amp;quot;shiny.rstudio.com/tutorial&amp;quot;&amp;gt;Click Here!&amp;lt;/a&amp;gt;
##   Thank you
## &amp;lt;/div&amp;gt; 


# Raw HTML 加 HTML()
tags$div(
  HTML(&amp;quot;&amp;lt;strong&amp;gt;Raw HTML!&amp;lt;/strong&amp;gt;&amp;quot;)
)
## &amp;lt;div&amp;gt;&amp;lt;strong&amp;gt;Raw HTML!&amp;lt;/strong&amp;gt;&amp;lt;/div&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;HTML 前端+ Shiny服务器端数据响应机制&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HTML form elements (in this case a select list and a number input) are bound to input slots using their &lt;strong&gt;name&lt;/strong&gt; attribute.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Output is rendered into HTML elements based on matching their &lt;strong&gt;id&lt;/strong&gt; attribute to an output slot and by specifying the requisite css class for the element (in this case either shiny-text-output, shiny-plot-output, or shiny-html-output)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;library(shiny)
runExample(&amp;quot;08_html&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;3-shinydashboard&#34;&gt;3. Shinydashboard&lt;/h1&gt;

&lt;p&gt;这是一个扩展R包，使其有一些面板功能。入门讲解在&lt;a href=&#34;https://rstudio.github.io/shinydashboard/index.html&#34;&gt;这里&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;4-shinyjs&#34;&gt;4. Shinyjs&lt;/h1&gt;

&lt;p&gt;从&lt;a href=&#34;https://github.com/daattali/shinyjs&#34;&gt;这里学习&lt;/a&gt;，这个放在以后再深入吧。&lt;/p&gt;

&lt;h1 id=&#34;5-shinythemes&#34;&gt;5. Shinythemes&lt;/h1&gt;

&lt;h1 id=&#34;6-shiny-server&#34;&gt;6. shiny server&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/rstudio/shiny-server&#34;&gt;学习入口&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://www.rstudio.com/products/shiny/download-server/&#34;&gt;最新安装文件&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;$ sudo su - \
-c &amp;quot;R -e \&amp;quot;install.packages(&#39;shiny&#39;, repos=&#39;https://cran.rstudio.com/&#39;)\&amp;quot;&amp;quot;
$ sudo apt-get install gdebi-core
$ wget https://download3.rstudio.org/ubuntu-12.04/x86_64/shiny-server-1.5.4.869-amd64.deb
$ sudo gdebi shiny-server-1.5.4.869-amd64.deb

start shiny-server 　　　　   # 启动
stop shiny-server 　　　　　# 停止
restart shiny-server 　　　　# 重启
status shiny-server 　　　　#查看状态  
reload shiny-server 　　　　#不中断服务的前提下 更新加载配置项

##web 查看
localhost:3838   默认端口时3838，可以在配置文件(/etc/shiny-server/shiny-server.conf)中修改：端口 和run_as默认为shiny,可改为username

Shiny Server默认会在/srv/shiny-server/目录查找你的Apps程序,可以把你开发的apps拷贝这个目录下
sudo cp ~/app file /srv/shiny-server/ 将文件拷入

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;######
一个生信技能树的参考教程
前几天刚好在亚马逊云上注册了一个1年免费的Amazon Web Services (AWS) ，正好以此来尝试学习下shiny的相关东西。

主要参考了：
http://deanattali.com/2015/05/09/setup-rstudio-shiny-server-digital-ocean/
http://www.bio-info-trainee.com/1683.html
操作系统：ubuntu
1. 安装 R
        sudo apt install r-base
2. 安装
Rstudio-server
        sudo apt-get install gdebi-core
        sudo apt-get install libapparmor1
        wget https://download2.rstudio.org/rstudio-server-1.0.143-amd64.deb
        sudo gdebi rstudio-server-1.0.143-amd64.deb
因为Rstudio-server不能以root用户登录，所以我们需要创建一个用户
        sudo adduser xxxxx
        ......
然后在网页上输入ip:8787进入Rstudio-server界面，输入用户和密码，即可登录

3. 安装
Shiny
        sudo su - -c &amp;quot;R -e \&amp;quot;install.packages(&#39;shiny&#39;, repos=&#39;http://cran.rstudio.com/&#39;)\&amp;quot;&amp;quot;
不能直接进入R，然后install.packages(&amp;quot;shiny&amp;quot;)，因为如果这样安装，是将shiny包安装下当前登录用户的个人library中，使得最终shiny-server无法运行
        apt-get install gdebi-core
        wget https://download3.rstudio.org/ub ... 1.5.3.838-amd64.deb
        sudo gdebi shiny-server-1.5.3.838-amd64.deb

做完以上几步后，shiny-server算是初步安装好了，然后可以在网页上ip:3838进入shiny-server界面(ip是你服务器的ip地址)。一般我们能看到左边一列的文字和右边的两个框。当然还需要再安装个rmarkdown，不然还是会有error的

        sudo su - -c &amp;quot;R -e \&amp;quot;install.packages(&#39;rmarkdown&#39;, repos=&#39;http://cran.rstudio.com/&#39;)\&amp;quot;&amp;quot;

4. 配置shiny server

    * Shiny Server log is at /var/log/shiny-server.log
    * The default Shiny Server homepage you’re seeing is located at /srv/shiny-server/index.html
- you can edit it or remove it.
    * Any Shiny app directory that you place under /srv/shiny-server/ will be served as a Shiny app. For example, there is a default app at /srv/shiny-server/sample-apps/hello/, which means you can run the app by going to http://123.456.1.2:3838/sample-apps/hello/

    * The config file for Shiny Server is at /etc/shiny-server/shiny-server.conf
    * To reload the server after editing the config, use sudo reload shiny-server
    * When hosting an Rmarkdown file, name the file index.rmd and add runtime: shiny to the document’s frontmatter

5. 赋予shiny权限
假设当你登录是以自己用户登录，你在shiny server创建的文件只有该用户（除了root）才有权限读写，但是shiny server是以shiny用户来运行shiny的app，所以要给予shiny用户在一些目录的权限。
例如：

        sudo groupadd shiny-apps
        sudo usermod -aG shiny-apps dean
        sudo usermod -aG shiny-apps shiny
        sudo chown -R dean:shiny-apps /srv/shiny-server
        sudo chmod g+w /srv/shiny-server
        sudo chmod g+s /srv/shiny-server  ####在该目录下创建的文件都属于该目录所属的组
        
6. 下载shiny官网的例子
git clone https://github.com/rstudio/shiny-examples.git
文件是要下载到/srv/shiny-server中
7. 运行例子程序
http://ip:3838/shiny-examples/010-download/ （ip是你服务器的ip地址）
想要运行哪个shiny app，只要在ip:3838/后面添加/srv/shiny-server中的文件的相对路径即可
###

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;最近用shiny做了一个页面，也是一个艰难的开始。Mark in(&amp;ldquo;Mon Sep 04 19:03:13 2017&amp;rdquo;)&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>常用命令集合</title>
      <link>/blog/cn/2017/08/a-collection-of-command/</link>
      <pubDate>Mon, 28 Aug 2017 12:00:58 +0000</pubDate>
      
      <guid>/blog/cn/2017/08/a-collection-of-command/</guid>
      <description>
        

&lt;h1 id=&#34;dos&#34;&gt;DOS&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;cd /   [root]&lt;/li&gt;
&lt;li&gt;cd ~  [home or root/user]&lt;/li&gt;
&lt;li&gt;cd . [Current]&lt;/li&gt;
&lt;li&gt;cd .. [Father]&lt;/li&gt;
&lt;li&gt;cd - [previous]&lt;/li&gt;
&lt;li&gt;pwd [current]&lt;/li&gt;
&lt;li&gt;d: +Enter [D:/]&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;ubuntu&#34;&gt;Ubuntu&lt;/h1&gt;

&lt;h3 id=&#34;basic&#34;&gt;Basic&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;sudo su 进入root&lt;/li&gt;
&lt;li&gt;exit &lt;strong&gt;or&lt;/strong&gt; logout  &lt;strong&gt;or&lt;/strong&gt; ctrl D 退出root&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;download&#34;&gt;Download&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&amp;amp; 加在一个命令之后可以把这个命令放到后台运行&lt;/li&gt;
&lt;li&gt;Ctrl+Z 可以把一个前台执行的命令放到后台&lt;/li&gt;
&lt;li&gt;jobs -l 查看后台运行的命令&lt;/li&gt;
&lt;li&gt;fg %jobnumber 将后台命令调到前台&lt;/li&gt;
&lt;li&gt;bg %jobnumber 重启后台暂停的命令&lt;/li&gt;
&lt;li&gt;kill %num 杀死&lt;/li&gt;
&lt;li&gt;ps 查看进程号PID&lt;/li&gt;
&lt;li&gt;nohup 始终执行&lt;/li&gt;
&lt;li&gt;ps - aux | grep xxx 显示终端关闭后的后台进程


&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;修改权限和所有者&#34;&gt;修改权限和所有者&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;[chmod -R 700 Document/]变更权限(-R参数是递归)&lt;/li&gt;
&lt;li&gt;[chown -R username:root Document/]修改所有者为root用户组的username用户&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;常用几种&#34;&gt;常用几种&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;sudo chmod -[读,写,执行]×××（所有者）×××（组用户）×××（其他用户）&lt;/li&gt;
&lt;li&gt;sudo chmod 600 ××× （只有所有者有读和写的权限）&lt;/li&gt;
&lt;li&gt;sudo chmod 644 ××× （所有者有读和写的权限，组用户只有读的权限）&lt;/li&gt;
&lt;li&gt;sudo chmod 700 ××× （只有所有者有读和写以及执行的权限）&lt;/li&gt;
&lt;li&gt;sudo chmod 666 ××× （每个人都有读和写的权限）&lt;/li&gt;
&lt;li&gt;sudo chmod 777 ××× （每个人都有读和写以及执行的权限）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;磁盘管理&#34;&gt;磁盘管理&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;mkdir -p 递归创建目录&lt;/li&gt;
&lt;li&gt;cp 复制&lt;/li&gt;
&lt;li&gt;rmdir 删除空目录&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;df -lh 查看磁盘空间&lt;br /&gt;
df -kh 查看磁盘挂载&lt;/li&gt;
&lt;li&gt;sudo fdisk -lu 显示硬盘及所属分区情况&lt;/li&gt;
&lt;li&gt;sudo fdisk /dev/sdb 对sbd盘分区&lt;br /&gt;
m(help)-n(增加一个新分区)-e(扩展分区)-1-4(分几个区)-&amp;hellip;-p(显示分区表)-w(保存分区表)&lt;/li&gt;
&lt;li&gt;sudo mkfs -t ext4 /dev/sdb 对sdb盘格式化为ext4格式&lt;/li&gt;
&lt;li&gt;sudo blkid 查看分区的UUID&lt;/li&gt;
&lt;li&gt;sudo blkid /dev/sda5 查看指定盘的UUID&lt;/li&gt;
&lt;li&gt;sudo mount -t ext4 /dev/sdb /data1 挂载到data1&lt;/li&gt;

&lt;li&gt;&lt;p&gt;suod umount /dev/sdb 卸载&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;sudo chown -R username:root Document/  修改文件夹所有者&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ubuntu 加载新硬盘教程&lt;a href=&#34;http://note.youdao.com/noteshare?id=19c72003e1f78ed8dafbe12c53c6e150&amp;amp;sub=8E9A1BEDF6AE4F73AB50892F428B249C&#34;&gt;Here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ubuntu&lt;a href=&#34;/blog/blog/pdf/Ubuntu命令手册.pdf&#34;&gt;命令手册&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;vi-操作&#34;&gt;vi 操作&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;基本上vi可以分为三种状态

&lt;ul&gt;
&lt;li&gt;分别是命令模式（command mode）：移动光标,删除&lt;/li&gt;
&lt;li&gt;插入模式（Insert mode）：用于输入字符&lt;/li&gt;
&lt;li&gt;底行模式（last line mode）：设置编辑环境和保存&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;进入vi  初始为命令模式
$vi file&lt;/li&gt;
&lt;li&gt;进入插入模式： 在命令模式下输入[i]&lt;/li&gt;
&lt;li&gt;ESC 返回命令模式&lt;/li&gt;
&lt;li&gt;[:]进入底行模式

&lt;ul&gt;
&lt;li&gt;[w fileName]以指定名字保存&lt;/li&gt;
&lt;li&gt;[wq]存盘并退出&lt;/li&gt;
&lt;li&gt;[q!]不存盘退出&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/itech/archive/2009/04/17/1438439.html&#34;&gt;更复杂用法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

        
      </description>
    </item>
    
    <item>
      <title>上线测试</title>
      <link>/blog/cn/2017/08/sem3/</link>
      <pubDate>Sun, 27 Aug 2017 20:56:14 +0000</pubDate>
      
      <guid>/blog/cn/2017/08/sem3/</guid>
      <description>
        &lt;p&gt;今天终于把blog搭建好了，mark and test&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>一些关于基因组名字的含义</title>
      <link>/blog/cn/2017/07/sem2/</link>
      <pubDate>Tue, 18 Jul 2017 14:18:14 +0000</pubDate>
      
      <guid>/blog/cn/2017/07/sem2/</guid>
      <description>
        &lt;p&gt;NC表示人类基因组DNA的RefSeq。&lt;/p&gt;

&lt;p&gt;NM表示mRNA的RefSeq。&lt;/p&gt;

&lt;p&gt;NP表示蛋白质的RefSeq。&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>序言</title>
      <link>/blog/cn/2017/07/preface/</link>
      <pubDate>Sun, 16 Jul 2017 14:18:14 +0000</pubDate>
      
      <guid>/blog/cn/2017/07/preface/</guid>
      <description>
        

&lt;h1 id=&#34;无一事马虎-无一日懈怠&#34;&gt;无一事马虎 无一日懈怠&lt;/h1&gt;

&lt;p&gt;好句，若真如此，生命无光，况凡人不可为之。可作凡人的目标，努力逼近它吧。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;最近几年我总是在寻找一个网络服务系统，能使我平生所得所获的有一个的去处，方便以后某个时间点来寻他们。在IT的世界里，我一直认为重要的是一种知识概念和印象，以前学过做过，过一段时间还是得从头再来，再做一遍与第一遍的时间相差无几， 假如你没有保存的话&amp;hellip;..&lt;/p&gt;

&lt;p&gt;Hogo的出现使最熟练R的人感到喜悦。看到那么多Hugo Themes，于是我开始挑啊，总告诉我有适合我的，却总是找不到它。我想找的它是一个目录列表+时间，目录列表的字体不要太大，这样能方便我快速的定位和找回过去的记忆，也省去频繁的翻页。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://yihui.name/&#34;&gt;Yihui&lt;/a&gt; 是我在打开Bioinformatics世界之初就偶然关注到的一个[学者]  OR  [IT工程师]  OR   [老师]，偶然和必然等意，Bioinformatics and Statistics的天下谁人不识君。他的页面和他的博客样式是我梦寐以求，就是它了。我没办法自己修改主题，我也不屑再去学，睡觉的时间宝贵，不要总是学，什么都学，学来学去魂消了。&lt;/p&gt;

&lt;p&gt;Yihui 吟的几句词也还不失雅趣，不舍删留此处，可算小读怡情。以后的拾遗也填在这里吧&amp;hellip;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;深情似海，问相逢初度，是何年纪？依约而今还记取，不是前生夙世。放学花前，题诗石上，春水园亭里。逢君一笑，人间无此欢喜。&lt;br /&gt;
无奈苍狗看云，红羊数劫，惘惘休提起。客气渐多真气少，汩没心灵何已。千古声名，百年担负，事事违初意。心头阁住，儿时那种情味。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;END&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>GO分析和Pathway分析</title>
      <link>/blog/cn/2016/12/sem1/</link>
      <pubDate>Thu, 15 Dec 2016 17:07:42 +0000</pubDate>
      
      <guid>/blog/cn/2016/12/sem1/</guid>
      <description>
        &lt;p&gt;干Bioinformatics差不多2年半了，却一直到对GO和pathway的区别搞不清楚，现在明白又觉好笑，记几个字在这里。&lt;/p&gt;

&lt;p&gt;一般对一组Gene Set 做GO是想看哪些生物功能；比如一个功能，有很多基因都和这个功能相关，把这个功能相关的所有基因找出来。&lt;/p&gt;

&lt;p&gt;而对一组GeneSet 做Kegg主要是看通路，在通路上的联系。&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
